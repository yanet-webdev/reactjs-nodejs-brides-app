{"ast":null,"code":"import _toConsumableArray from\"/Users/yanet/newbrides/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/yanet/newbrides/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{CART_ADD_ITEM,CART_REMOVE_ITEM}from\"../constants/cartConstant\";export var cartReducer=function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{cartItems:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CART_ADD_ITEM:var item=action.payload;var existItem=state.cartItems.find(function(x){return x.product===item.product;});if(existItem){return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.map(function(x){return x.product===existItem.product?item:x;})});}else{/*this add the new item to the old cartItems*/return _objectSpread(_objectSpread({},state),{},{cartItems:[].concat(_toConsumableArray(state.cartItems),[item])});}case CART_REMOVE_ITEM:return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.filter(function(x){return x.product!==action.payload;})});default:return state;}};","map":{"version":3,"sources":["/Users/yanet/newbrides/frontend/src/reducers/cartReducer.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"mTAAA,OAASA,aAAT,CAAwBC,gBAAxB,KAAgD,2BAAhD,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAuC,IAAtCC,CAAAA,KAAsC,2DAA9B,CAAEC,SAAS,CAAE,EAAb,CAA8B,IAAXC,CAAAA,MAAW,2CAChE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,CAAAA,aAAL,CACE,GAAMO,CAAAA,IAAI,CAAGF,MAAM,CAACG,OAApB,CACA,GAAMC,CAAAA,SAAS,CAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,OAAF,GAAcL,IAAI,CAACK,OAA1B,EAArB,CAAlB,CACA,GAAIH,SAAJ,CAAe,CACb,sCACKN,KADL,MAEEC,SAAS,CAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoB,SAACF,CAAD,QAC7BA,CAAAA,CAAC,CAACC,OAAF,GAAcH,SAAS,CAACG,OAAxB,CAAkCL,IAAlC,CAAyCI,CADZ,EAApB,CAFb,GAMD,CAPD,IAOO,CACL,8CACA,sCAAYR,KAAZ,MAAmBC,SAAS,8BAAMD,KAAK,CAACC,SAAZ,GAAuBG,IAAvB,EAA5B,GACD,CACH,IAAKN,CAAAA,gBAAL,CACE,sCACKE,KADL,MAEEC,SAAS,CAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuB,SAACH,CAAD,QAAOA,CAAAA,CAAC,CAACC,OAAF,GAAcP,MAAM,CAACG,OAA5B,EAAvB,CAFb,GAKF,QACE,MAAOL,CAAAA,KAAP,CAtBJ,CAwBD,CAzBM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstant\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        /*this add the new item to the old cartItems*/\n        return { ...state, cartItems: [...state.cartItems, item] };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}