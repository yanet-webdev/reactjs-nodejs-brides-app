{"ast":null,"code":"var _jsxFileName = \"/Users/yanet/Desktop/newBrides/frontend/src/components/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"../actions/cartAction\";\nimport EmptyStripe from \"./EmptyStripe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EmptyStripe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screencart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: [\"Cart is empty. \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \" Continue Shopping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image,\n              alt: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/product/${item}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, item.product, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartScreen, \"O8kV4FMad4uUEER48J0xtNwHiNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/Users/yanet/Desktop/newBrides/frontend/src/components/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","addToCart","EmptyStripe","CartScreen","props","productId","match","params","id","qty","location","search","Number","split","cart","state","cartItems","dispatch","length","map","item","image","name","product"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AAEA,QAAMC,GAAG,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,GACRC,MAAM,CAACR,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CADE,GAER,CAFJ;AAGE,QAAMC,IAAI,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB;AACF,QAAMG,QAAQ,GAAGlB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,SAAJ,EAAe;AACbY,MAAAA,QAAQ,CAAChB,SAAS,CAACI,SAAD,EAAYI,GAAZ,CAAV,CAAR;AACD;AACF,GAJQ,EAIN,CAACQ,QAAD,EAAWZ,SAAX,EAAsBI,GAAtB,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGIO,SAAS,CAACE,MAAV,KAAqB,CAArB,gBAAyB,QAAC,UAAD;AAAA,mDACV,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADU;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzB,gBAKE;AAAA,kBAEIF,SAAS,CAACG,GAAV,CAAeC,IAAD,iBACZ;AAAA,kCACE;AAAA,mCACE;AAAK,cAAA,GAAG,EAAEA,IAAI,CAACC,KAAf;AAAsB,cAAA,GAAG,EAAED,IAAI,CAACE;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,YAAWF,IAAK;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAAUA,IAAI,CAACG,OAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cARN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA9CuBpB,U;UAMPH,W,EAEED,W;;;KARKI,U","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"../actions/cartAction\";\nimport EmptyStripe from \"./EmptyStripe\";\n\nexport default function CartScreen(props) {\n  const productId = props.match.params.id;\n\n  const qty = props.location.search\n    ? Number(props.location.search.split(\"=\")[1])\n    : 1;\n    const cart = useSelector((state) => state.cart);\n    const { cartItems } = cart;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  return (\n    <div>\n      <EmptyStripe />\n      <div className=\"screencart\">\n        <h1>Shopping Cart</h1>\n        {\n          cartItems.length === 0 ? <MessageBox>\n          Cart is empty. <Link to =\"/\"> Continue Shopping</Link>\n          </MessageBox>\n          :\n          (\n            <ul>\n              {\n                cartItems.map((item) => (\n                  <li key= {item.product}>\n                    <div>\n                      <img src={item.image} alt={item.name} ></img>\n                    </div>\n                    <div>\n                      <Link to={`/product/${item}`}></Link>\n                    </div>\n                  </li>\n                ))\n              }\n            </ul>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}