{"ast":null,"code":"import Axios from \"axios\";\nimport { //   USER_DETAILS_FAIL,\n//   USER_DETAILS_REQUEST,\n//   USER_DETAILS_SUCCESS,\n//   USER_REGISTER_FAIL,\n//   USER_REGISTER_REQUEST,\n//   USER_REGISTER_SUCCESS,\nUSER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT //   USER_SIGNOUT,\n//   USER_UPDATE_PROFILE_FAIL,\n//   USER_UPDATE_PROFILE_REQUEST,\n//   USER_UPDATE_PROFILE_SUCCESS,\n} from \"../constants/userConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // export const register = (name, email, password) => async (dispatch) => {\n//   dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n//   try {\n//     const { data } = await Axios.post(\"/api/users/register\", {\n//       name,\n//       email,\n//       password,\n//     });\n//     dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     dispatch({\n//       type: USER_REGISTER_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  dispatch({\n    type: USER_SIGNOUT\n  });\n}; // export const detailsUser = (userId) => async (dispatch, getState) => {\n//   dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(`/api/users/${userId}`, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DETAILS_FAIL, payload: message });\n//   }\n// };\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//   dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.put(`/api/users/profile`, user, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n//   }\n// };","map":{"version":3,"sources":["/Users/yanet/newbrides/frontend/src/actions/userActions copy.js"],"names":["Axios","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACA;AACA;AACA;AACA;AACA;AACA;AACEC,gBAPF,EAQEC,mBARF,EASEC,mBATF,EAUEC,YAVF,CAWA;AACA;AACA;AACA;AAdA,OAeO,4BAfP;AAiBA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,mBAAR;AAA6BQ,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAtC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACY,IAAN,CAAW,mBAAX,EAAgC;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAhC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,mBAAR;AAA6BO,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACD,GAJD,CAIE,OAAOM,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,gBADC;AAEPS,MAAAA,OAAO,EACLO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAfM,C,CAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAOZ,QAAD,IAAc;AACzCK,EAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACAR,EAAAA,YAAY,CAACQ,UAAb,CAAwB,WAAxB;AACAb,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACD,CAJM,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Axios from \"axios\";\nimport {\n//   USER_DETAILS_FAIL,\n//   USER_DETAILS_REQUEST,\n//   USER_DETAILS_SUCCESS,\n//   USER_REGISTER_FAIL,\n//   USER_REGISTER_REQUEST,\n//   USER_REGISTER_SUCCESS,\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n//   USER_SIGNOUT,\n//   USER_UPDATE_PROFILE_FAIL,\n//   USER_UPDATE_PROFILE_REQUEST,\n//   USER_UPDATE_PROFILE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post(\"/api/users/signin\", { email, password });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// export const register = (name, email, password) => async (dispatch) => {\n//   dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n//   try {\n//     const { data } = await Axios.post(\"/api/users/register\", {\n//       name,\n//       email,\n//       password,\n//     });\n//     dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     dispatch({\n//       type: USER_REGISTER_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  dispatch({ type: USER_SIGNOUT });\n};\n\n// export const detailsUser = (userId) => async (dispatch, getState) => {\n//   dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(`/api/users/${userId}`, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DETAILS_FAIL, payload: message });\n//   }\n// };\n\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//   dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.put(`/api/users/profile`, user, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}