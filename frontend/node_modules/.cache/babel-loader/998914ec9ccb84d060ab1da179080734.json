{"ast":null,"code":"import Axios from \"axios\";\nimport { // USER_DETAILS_FAIL,\n// USER_DETAILS_REQUEST,\n// USER_DETAILS_SUCCESS,\nUSER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT // USER_UPDATE_PROFILE_FAIL,\n// USER_UPDATE_PROFILE_REQUEST,\n// USER_UPDATE_PROFILE_SUCCESS,\n} from \"../constants/userConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\"); // localStorage.removeItem(\"shippingAddress\");\n\n  dispatch({\n    type: USER_SIGNOUT\n  });\n}; // export const detailsUser = (userId) => async (dispatch, getState) => {\n//   dispatch({\n//     type: USER_DETAILS_REQUEST,\n//     payload: userId,\n//   });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(`/api/users/${userId}`, {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     });\n//     dispatch({\n//       type: USER_DETAILS_SUCCESS,\n//       payload: data,\n//     });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({\n//       type: USER_DETAILS_FAIL,\n//       payload: message,\n//     });\n//   }\n// };\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//   dispatch({\n//     type: USER_UPDATE_PROFILE_REQUEST,\n//     payload: user,\n//   });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.put(`/api/users/profile`, user, {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     });\n//     dispatch({\n//       type: USER_UPDATE_PROFILE_SUCCESS,\n//       payload: data,\n//     });\n//     dispatch({\n//       type: USER_SIGNIN_SUCCESS,\n//       payload: data,\n//     });\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({\n//       type: USER_UPDATE_PROFILE_FAIL,\n//       payload: message,\n//     });\n//   }\n// };","map":{"version":3,"sources":["/Users/yanet/newbrides/frontend/src/actions/userActions.js"],"names":["Axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","register","name","signout","removeItem"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n  // USER_DETAILS_FAIL,\n  // USER_DETAILS_REQUEST,\n  // USER_DETAILS_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n  // USER_UPDATE_PROFILE_FAIL,\n  // USER_UPDATE_PROFILE_REQUEST,\n  // USER_UPDATE_PROFILE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password,\n    },\n  });\n  try {\n    const { data } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password,\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password,\n    },\n  });\n  try {\n    const { data } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password,\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  // localStorage.removeItem(\"shippingAddress\");\n  dispatch({\n    type: USER_SIGNOUT,\n  });\n};\n\n// export const detailsUser = (userId) => async (dispatch, getState) => {\n//   dispatch({\n//     type: USER_DETAILS_REQUEST,\n//     payload: userId,\n//   });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(`/api/users/${userId}`, {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     });\n//     dispatch({\n//       type: USER_DETAILS_SUCCESS,\n//       payload: data,\n//     });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({\n//       type: USER_DETAILS_FAIL,\n//       payload: message,\n//     });\n//   }\n// };\n\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//   dispatch({\n//     type: USER_UPDATE_PROFILE_REQUEST,\n//     payload: user,\n//   });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.put(`/api/users/profile`, user, {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     });\n//     dispatch({\n//       type: USER_UPDATE_PROFILE_SUCCESS,\n//       payload: data,\n//     });\n//     dispatch({\n//       type: USER_SIGNIN_SUCCESS,\n//       payload: data,\n//     });\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({\n//       type: USER_UPDATE_PROFILE_FAIL,\n//       payload: message,\n//     });\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}