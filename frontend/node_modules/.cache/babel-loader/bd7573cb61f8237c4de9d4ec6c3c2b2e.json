{"ast":null,"code":"import { Axios } from \"axios\";\nimport axiosInstance from \"../config\";\nimport { // USER_DETAILS_FAIL,\n// USER_DETAILS_REQUEST,\n// USER_DETAILS_SUCCESS,\nUSER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT // USER_UPDATE_PROFILE_FAIL,\n// USER_UPDATE_PROFILE_REQUEST,\n// USER_UPDATE_PROFILE_SUCCESS,\n} from \"../constants/userConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};","map":{"version":3,"sources":["/Users/yanet/newbrides/frontend/src/actions/userActions.js"],"names":["Axios","axiosInstance","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","signin","email","password","dispatch","type","payload","data","axios","post","localStorage","setItem","JSON","stringify","error","response","message","register","name","signout","removeItem"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,SACE;AACA;AACA;AACAC,kBAJF,EAKEC,qBALF,EAMEC,qBANF,EAOEC,gBAPF,EAQEC,mBARF,EASEC,mBATF,EAUEC,YAVF,CAWE;AACA;AACA;AAbF,OAcO,4BAdP;AAgBA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP,mBADC;AAEPQ,IAAAA,OAAO,EAAE;AACPJ,MAAAA,KADO;AAEPC,MAAAA;AAFO;AAFF,GAAD,CAAR;;AAOA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMC,KAAK,CAACC,IAAN,CAAW,mBAAX,EAAgC;AACrDP,MAAAA,KADqD;AAErDC,MAAAA;AAFqD,KAAhC,CAAvB;AAIAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,mBADC;AAEPO,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAIAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACD,GAVD,CAUE,OAAOO,KAAP,EAAc;AACdV,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,gBADC;AAEPS,MAAAA,OAAO,EACLQ,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA3BM;AA6BP,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOhB,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AACrEA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEV,qBADC;AAEPW,IAAAA,OAAO,EAAE;AACPJ,MAAAA,KADO;AAEPC,MAAAA;AAFO;AAFF,GAAD,CAAR;;AAOA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAACiB,IAAN,CAAW,qBAAX,EAAkC;AACvDS,MAAAA,IADuD;AAEvDhB,MAAAA,KAFuD;AAGvDC,MAAAA;AAHuD,KAAlC,CAAvB;AAKAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,qBADC;AAEPU,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAIAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,mBADC;AAEPO,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAIAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACD,GAfD,CAeE,OAAOO,KAAP,EAAc;AACdV,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,kBADC;AAEPY,MAAAA,OAAO,EACLQ,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAhCM;AAkCP,OAAO,MAAMG,OAAO,GAAG,MAAOf,QAAD,IAAc;AACzCM,EAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACAV,EAAAA,YAAY,CAACU,UAAb,CAAwB,WAAxB;AACAhB,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEL;AADC,GAAD,CAAR;AAGD,CANM","sourcesContent":["import { Axios } from \"axios\";\nimport axiosInstance from \"../config\";\nimport {\n  // USER_DETAILS_FAIL,\n  // USER_DETAILS_REQUEST,\n  // USER_DETAILS_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n  // USER_UPDATE_PROFILE_FAIL,\n  // USER_UPDATE_PROFILE_REQUEST,\n  // USER_UPDATE_PROFILE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password,\n    },\n  });\n  try {\n    const { data } = await axios.post(\"/api/users/signin\", {\n      email,\n      password,\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password,\n    },\n  });\n  try {\n    const { data } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password,\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  dispatch({\n    type: USER_SIGNOUT,\n  });\n};\n\n\n"]},"metadata":{},"sourceType":"module"}