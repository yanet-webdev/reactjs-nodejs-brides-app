{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS } from \"../constants/userConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // export const register = (name, email, password) => async(dispatch) => {\n//     dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n//     try{\n//         const { data } = await Axios.post('/api/users/register', {\n//             name,\n//             email,\n//             password\n//         });\n//         dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n//         dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//         localStorage.setItem('userInfo', JSON.stringify(data));\n//     }catch (error) {\n//         dispatch({\n//             type: USER_REGISTER_FAIL,\n//             payload:\n//             error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message,\n//         });\n//     }\n// };\n// export const signout = () => (dispatch) => {\n//     localStorage.removeItem('userInfo');\n//     localStorage.removeItem('cartItems');\n//     localStorage.removeItem('shippingAddress');\n//     dispatch({ type: USER_SIGNOUT });\n// };\n// export const detailsUser = (userId) => async (dispatch, getState) => {\n//     dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n//     const {\n//         userSignin: { userInfo },\n//     } = getState();\n//     try{\n//         const { data } = await Axios.get(`/api/users/${userId}`, {\n//             headers: { Authorization: `Bearer ${userInfo.token}` },\n//         });\n//         dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n//     }catch (error) {\n//         const message =\n//         error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message;\n//         dispatch({ type: USER_DETAILS_FAIL, payload: message });\n//     }\n// };\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//     dispatch ({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n//     const {\n//         userSignin: { userInfo },\n//     } = getState();\n//     try{\n//         const { data } = await Axios.put(`/api/users/profile`, user, {\n//             headers: { Authorization: `Bearer ${userInfo.token}` },\n//         });\n//         dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n//         dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//         localStorage.setItem('userInfo', JSON.stringify(data));\n//     }catch (error) {\n//         const message =\n//         error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message;\n//             dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n//     }\n// };","map":{"version":3,"sources":["/Users/yanet/newbrides/frontend/src/actions/userActions.js"],"names":["Axios","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAEEC,gBAFF,EAGEC,mBAHF,EAIEC,mBAJF,QAMO,4BANP;AAQA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN,mBAAR;AAA6BO,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAtC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,IAAN,CAAW,mBAAX,EAAgC;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAhC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,mBAAR;AAA6BM,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACCE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACF,GAJD,CAIE,OAAOM,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,gBADC;AAEPQ,MAAAA,OAAO,EACLO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAfM,C,CAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Axios from \"axios\";\nimport {\n \n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  \n} from \"../constants/userConstants\";\n\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post(\"/api/users/signin\", { email, password });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// export const register = (name, email, password) => async(dispatch) => {\n//     dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n//     try{\n//         const { data } = await Axios.post('/api/users/register', {\n//             name,\n//             email,\n//             password\n//         });\n//         dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n//         dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//         localStorage.setItem('userInfo', JSON.stringify(data));\n//     }catch (error) {\n//         dispatch({\n//             type: USER_REGISTER_FAIL,\n//             payload:\n//             error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message,\n//         });\n//     }\n// };\n\n// export const signout = () => (dispatch) => {\n//     localStorage.removeItem('userInfo');\n//     localStorage.removeItem('cartItems');\n//     localStorage.removeItem('shippingAddress');\n//     dispatch({ type: USER_SIGNOUT });\n// };\n\n// export const detailsUser = (userId) => async (dispatch, getState) => {\n//     dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n//     const {\n//         userSignin: { userInfo },\n//     } = getState();\n//     try{\n//         const { data } = await Axios.get(`/api/users/${userId}`, {\n//             headers: { Authorization: `Bearer ${userInfo.token}` },\n//         });\n//         dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n//     }catch (error) {\n//         const message =\n//         error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message;\n//         dispatch({ type: USER_DETAILS_FAIL, payload: message });\n//     }\n// };\n\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//     dispatch ({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n//     const {\n//         userSignin: { userInfo },\n//     } = getState();\n//     try{\n//         const { data } = await Axios.put(`/api/users/profile`, user, {\n//             headers: { Authorization: `Bearer ${userInfo.token}` },\n//         });\n//         dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n//         dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//         localStorage.setItem('userInfo', JSON.stringify(data));\n//     }catch (error) {\n//         const message =\n//         error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message;\n//             dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n//     }\n// };\n"]},"metadata":{},"sourceType":"module"}